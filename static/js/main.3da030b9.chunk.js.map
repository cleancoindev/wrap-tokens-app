{"version":3,"sources":["ERC20Abi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["erc20Abi","Web3","utils","toBN","fromWei","toWei","myWeb3","CHAINS","_web3Provider","baseGetWeb3","a","givenProvider","getChainId","web3","eth","isAddressValid","v","isAddress","isWrappedTokenValid","test","lt","pow","isRealNumber","_fetchedJsonPromises","Map","_fetched","fetchOnceJsonPromise","url","promise","get","fetch","fetchResult","json","set","fetchOnceJson","Address","props","className","type","maxLength","size","value","onChange","WrappedERC20","Amount","App","useState","connectedToAccount","setConnectedToAccount","erc20Contract","_setErc20Contract","erc1155Token","_setErc1155Token","lockerContract","_setLockerContract","wrapperContract","setWrapperContract","erc20Amount","setErc20Amount","erc20Symbol","setErc20Symbol","lockedErc1155Amount","setLockedErc1155Amount","amount","setAmount","erc1155WrapperApproved","setErc1155WrapperApproved","getWeb3","window","ethereum","enable","catch","_","getAccounts","then","accounts","length","getABIs","getAddresses","Promise","all","chainId","myEvents","connectEvents","console","log","clearSubscriptions","account","abi","ERC1155LockedERC20","erc1155","Contract","events","TransferSingle","filter","_to","loadLockedIn1155","TransferBatch","erc20","Transfer","to","loadErc20","from","Approval","owner","spender","checkErc1155WrapperApproved","mySend","contract","method","args","sendArgs","handler","bind","estimateGas","gas","estimatedGas","String","Math","floor","Number","send","setErc20Contract","tokenId","toString","setErc1155Token","hex","toHex","addr","replace","repeat","checksumed","toChecksumAddress","_erc20Contract","methods","balanceOf","call","balance","symbol","_lockerContract","_erc1155Token","e","allowance","allowanceStr","halfBig","setLockerContract","abi2","big","sub","approve","alert","message","borrowERC20","returnToERC20","on","addresses","address","ERC1155OverERC20","style","marginBottom","marginTop","href","display","fontSize","color","fontWeight","target","onClick","disabled","cursor","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3da030b9.chunk.js","sourcesContent":["const erc20Abi = [\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_from\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"fallback\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    }\n];\n\nexport default erc20Abi;","import React, { useState, isValidElement, ChangeEvent } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\n// MEWConnect does not work on Firefox 83.0 for Ubuntu.\n// import Web3Modal from \"web3modal\";\n// import MewConnect from '@myetherwallet/mewconnect-web-client';\nimport erc20Abi from './ERC20Abi';\nconst { toBN, fromWei, toWei } = Web3.utils;\n\n// TODO: This code is messy.\n\nlet myWeb3: any = null;\n\n// TODO: Show pending transactions.\n// TODO: Better dialog than alert()\n// FIXME: After rejecting approval for lock/unlock should not ask for lock/unlock confirmation.\n\n// TODO\nconst CHAINS: { [id: string] : string } = {\n  '1': 'mainnet',\n  '3': 'ropsten',\n  '4': 'rinkeby',\n  '5': 'goerli',\n  '42': 'kovan',\n  '1337': 'local',\n  '122': 'fuse',\n  '80001': 'mumbai',\n  '137': 'matic',\n  '99': 'core',\n  '77': 'sokol',\n  '100': 'xdai',\n  '74': 'idchain',\n  '56': 'bsc',\n  '97': 'bsctest',\n}\n\nlet _web3Provider: any = null;\nlet _web3Modal: any = null;\n\n// async function myWeb3Modal() {\n//   if (_web3Modal) {\n//     return _web3Modal;\n//   }\n\n//   // const MewConnect = require('@myetherwallet/mewconnect-web-client');\n\n//   const providerOptions = {\n//       mewconnect: {\n//           package: MewConnect, // required\n//           options: {\n//               infuraId: process.env.REACT_APP_INFURA_ID || '859569f6decc4446a5da1bb680e7e9cf'\n//           }\n//       }\n//   };\n\n//   return _web3Modal = new Web3Modal({\n//     network: 'mainnet',\n//     cacheProvider: true,\n//     providerOptions\n//   });\n// }\n\n// async function getWeb3Provider() {\n//   if(_web3Provider) {\n//     return _web3Provider;\n//   } else {\n//     // await connectEvents();\n//   }\n//   return _web3Provider = (window as any).ethereum ? await (await myWeb3Modal()).connect() : null;\n// }\n\nasync function baseGetWeb3() {\n  if(myWeb3) return myWeb3;\n\n  _web3Provider = Web3.givenProvider; //await getWeb3Provider();\n  return myWeb3 = _web3Provider ? new Web3(_web3Provider) : null;\n}\n\nasync function getChainId(): Promise<any> { // TODO: more specific type\n  const web3 = await baseGetWeb3();\n  if (!web3) {\n    return null;\n  }\n  return await (web3 as any).eth.getChainId();\n}\n\nfunction isAddressValid(v: string): boolean { // TODO: called twice\n  return Web3.utils.isAddress(v);\n}\n\nfunction isWrappedTokenValid(v: string): boolean { // TODO: called twice\n  return /^[0-9]+$/.test(v) && toBN(v).lt(toBN(2).pow(toBN(160)));\n}\n\nfunction isRealNumber(v: string): boolean { // TODO: called twice\n  return /^[0-9]+(\\.[0-9]+)?$/.test(v);\n}\n\n// let _fetchedPromises = new Map<string, Promise<any>>();\nlet _fetchedJsonPromises = new Map<string, Promise<any>>();\nlet _fetched = new Map<string, any>();\n\nasync function fetchOnceJsonPromise(url: string): Promise<Promise<any>> {\n  let promise = _fetchedJsonPromises.get(url);\n  if (promise) {\n    return promise;\n  } else {\n    const fetchResult = await fetch(url);\n    promise = fetchResult.json() as Promise<any>;\n    _fetchedJsonPromises.set(url, promise);\n    return await promise;\n  }\n}\n\nasync function fetchOnceJson(url: string): Promise<any> {\n  let json = _fetched.get(url);\n  if (json) {\n    return json;\n  } else {\n    json = await fetchOnceJsonPromise(url);\n    _fetched.set(url, json);\n    return json;\n  }\n}\n\nfunction App() {\n  const [connectedToAccount, setConnectedToAccount] = useState(true); // Don't show the message by default.\n  const [erc20Contract, _setErc20Contract] = useState('');\n  const [erc1155Token, _setErc1155Token] = useState('');\n  const [lockerContract, _setLockerContract] = useState('');\n  const [wrapperContract, setWrapperContract] = useState('');\n  const [erc20Amount, setErc20Amount] = useState('');\n  const [erc20Symbol, setErc20Symbol] = useState('');\n  const [lockedErc1155Amount, setLockedErc1155Amount] = useState('');\n  const [amount, setAmount] = useState('');\n  const [erc1155WrapperApproved, setErc1155WrapperApproved] = useState(false);\n\n  async function getWeb3() {\n    try {\n      (window as any).ethereum.enable().catch(() => {}); // Without this catch Firefox 83.0 crashes on user pressing Cancel.\n    }\n    catch(_) { }\n    const web3 = await baseGetWeb3();\n    getAccounts().then((accounts) => {\n      setConnectedToAccount(accounts.length !== 0);\n    });\n    return web3;\n  }\n\n  async function getABIs() {\n    return await fetchOnceJson(`/abis.json`);\n  }\n  \n  let addressesPromise: any = null;\n  let addresses: object | null = null;\n  \n  async function getAddresses() {\n    const [json, chainId] = await Promise.all([fetchOnceJson(`addresses.json`), getChainId()]);\n    return CHAINS[chainId] ? json[CHAINS[chainId]] : null;\n  }\n\n  async function getAccounts(): Promise<Array<string>> {\n    const web3 = await baseGetWeb3();\n    return web3 ? (web3 as any).eth.getAccounts() : null;\n  }\n\n  let myEvents = [null, null, null, null, null];\n  \n  // TODO: Connect two contracts separately.\n  async function connectEvents(erc20Contract: string, lockerContract: string, erc1155Token: string) {\n    console.log('connectEvents')\n    // for (let ev of myEvents) {\n    //   if(ev) (ev as any).unsubscribe();\n    // }\n    \n    if(!isAddressValid(erc20Contract)) {\n      return;\n    }\n    const web3 = await getWeb3();\n    if(web3 === null) return;\n    web3.eth.clearSubscriptions();\n    const account = (await getAccounts())[0];\n    if(!account) return;\n    if (isAddressValid(lockerContract)) {\n      const abi = (await getABIs()).ERC1155LockedERC20;\n      const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n      myEvents[0] = erc1155.events.TransferSingle({filter: {_to: account}}, async () => {\n        console.log('A')\n        return await loadLockedIn1155(lockerContract, erc1155Token);\n      });\n      myEvents[1] = erc1155.events.TransferBatch({filter: {_to: account}}, async () => {\n        return await loadLockedIn1155(lockerContract, erc1155Token);\n      });\n    }\n    if (isAddressValid(erc20Contract)) {\n      const abi = await fetchOnceJson('erc20-abi.json');\n      const erc20 = new (web3 as any).eth.Contract(abi, erc20Contract);\n      // TODO: Don't reload token symbol.\n      myEvents[2] = erc20.events.Transfer({filter: {to: account}}, async () => {\n        return await loadErc20(erc20Contract);\n      });\n      myEvents[3] = erc20.events.Transfer({filter: {from: account}}, async () => {\n        return await loadErc20(erc20Contract);\n      });\n\n      // TODO: Don't reload token symbol.\n      myEvents[4] = erc20.events.Approval({filter: {owner: account, spender: wrapperContract}}, async () => {\n        return await checkErc1155WrapperApproved(erc20Contract);\n      });\n    }\n  }\n\n  if ((window as any).ethereum) {\n    (window as any).ethereum.on('chainChanged', async (chainId: any) => { // TODO: more specific type\n      // TODO: hacky code\n      // TODO: duplicate code\n      await getAddresses().then((addresses) => {\n        if (addresses) {\n          setLockerContract(addresses.ERC1155LockedERC20.address);\n          setWrapperContract(addresses.ERC1155OverERC20.address);\n        }\n      });\n      await loadLockedIn1155(lockerContract, erc1155Token);\n      await loadErc20(erc20Contract);\n    });\n\n    (window as any).ethereum.on('accountsChanged', async function (accounts: Array<string>) {\n      if (isAddressValid(erc20Contract)) {\n        setConnectedToAccount(accounts.length !== 0);\n        await loadErc20(erc20Contract);\n      }\n    });\n  }\n\n  // FIXME: returns Promise?\n  async function mySend(contract: string, method: any, args: Array<any>, sendArgs: any, handler: any): Promise<any> {\n    sendArgs = sendArgs || {}\n    const web3 = await getWeb3();\n    const account = (await getAccounts())[0];\n    return method.bind(contract)(...args).estimateGas({gas: '1000000', from: account, ...sendArgs}).\n        then((estimatedGas: string) => {\n            const gas = String(Math.floor(Number(estimatedGas) * 1.15) + 24000);\n            if(handler !== null)\n                return method.bind(contract)(...args).send({gas, from: account, ...sendArgs}, handler);\n            else\n                return method.bind(contract)(...args).send({gas, from: account, ...sendArgs});\n        });\n  }\n  \n  async function setErc20Contract(v: string) {\n    _setErc20Contract(v);\n    let tokenId = \"\";\n    if(isAddressValid(v)) {\n      tokenId = toBN(v).toString();\n      _setErc1155Token(tokenId);\n    } else {\n      _setErc1155Token(\"\");\n    }\n    await loadErc20(v);\n    await loadLockedIn1155(lockerContract, tokenId);\n    await connectEvents(v, lockerContract, tokenId);\n    await checkErc1155WrapperApproved(v);\n  }\n\n  async function setErc1155Token(v: string) {\n    _setErc1155Token(v);\n    if(isWrappedTokenValid(v)) {\n      const hex = Web3.utils.toHex(v);\n      const addr = hex.replace(/^0x/, '0x' + '0'.repeat(42 - hex.length))\n      const checksumed = Web3.utils.toChecksumAddress(addr);\n      _setErc20Contract(checksumed);\n      await loadErc20(checksumed);\n      await checkErc1155WrapperApproved(checksumed);\n      await connectEvents(checksumed, lockerContract, v);\n    } else {\n      _setErc20Contract(\"\");\n      await loadErc20(\"\");\n      await checkErc1155WrapperApproved(\"\");\n      await connectEvents(erc20Contract, lockerContract, v);\n    }\n    await loadLockedIn1155(lockerContract, v);\n  }\n\n  async function loadErc20(_erc20Contract: string) {\n    // TODO: Don't call functions repeatedly.\n    if (isAddressValid(_erc20Contract)) {\n      const web3 = await getWeb3();\n      if (web3 !== null) {\n        const erc20 = new (web3 as any).eth.Contract(erc20Abi as any, _erc20Contract);\n        const account = (await getAccounts())[0];\n        if(!account) {\n          setConnectedToAccount(false);\n          return;\n        }\n      \n        erc20.methods.balanceOf(account).call()\n          .then((balance: string) => {\n            setErc20Amount(balance);\n          })\n          .catch(() => {\n            setErc20Amount(\"\");\n          });\n\n        erc20.methods.symbol().call()\n          .then((symbol: string) => {\n            setErc20Symbol(symbol);\n          })\n          .catch(() => {\n            setErc20Symbol(\"\");\n          });\n      } else {\n        setErc20Amount(\"\");\n        setErc20Symbol(\"\");\n      }\n    } else {\n      setErc20Amount(\"\");\n      setErc20Symbol(\"\");\n    }\n  }\n\n  async function loadLockedIn1155(_lockerContract: string, _erc1155Token: string) {\n    // TODO: Don't call functions repeatedly.\n    if (isAddressValid(_lockerContract) && isWrappedTokenValid(_erc1155Token)) {\n      const abi = (await getABIs()).ERC1155LockedERC20;\n      if (abi) {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          const erc1155 = new (web3 as any).eth.Contract(abi as any, _lockerContract);\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setConnectedToAccount(false);\n            return;\n          }\n  \n          if (isWrappedTokenValid(_erc1155Token)) {\n            erc1155.methods.balanceOf(account, _erc1155Token).call()\n              .then((balance: string) => {\n                setLockedErc1155Amount(balance);\n              })\n              .catch((e: any) => {\n                setLockedErc1155Amount(\"\");\n              });\n          } else {\n            setLockedErc1155Amount(\"\");\n          }\n        } else {\n          setLockedErc1155Amount(\"\");\n        }\n      }\n    } else {\n      setLockedErc1155Amount(\"\");\n    }\n  }\n\n  async function checkErc1155WrapperApproved(_erc20Contract: string) {\n    if (isAddressValid(_erc20Contract)) {\n      const web3 = await getWeb3();\n      if (web3 !== null) {\n        const account = (await getAccounts())[0];\n        if(!account) {\n          setErc1155WrapperApproved(false);\n          return;\n        }\n        try {\n          const erc20 = new (web3 as any).eth.Contract(erc20Abi as any, _erc20Contract);\n          const allowanceStr = await erc20.methods.allowance(account, wrapperContract).call();\n          const allowance = toBN(allowanceStr);\n          const halfBig = toBN(2).pow(toBN(128));\n          setErc1155WrapperApproved(!allowance.lt(halfBig));\n        }\n        catch(_) {\n          setErc1155WrapperApproved(false);\n        }\n      } else {\n        setErc1155WrapperApproved(false);\n      }\n    } else {\n      setErc1155WrapperApproved(false);\n    }\n  }\n\n  async function setLockerContract(v: string) {\n    _setLockerContract(v);\n    await loadLockedIn1155(v, erc1155Token);\n  }\n\n  // getAddresses().then((addresses) => {\n  //   if (addresses) {\n  //     setLockerContract(addresses.ERC1155LockedERC20.address);\n  //     setWrapperContract(addresses.ERC1155OverERC20.address);\n  //   }\n  // });\n\n  async function lockErc20inErc1155() {\n    if (isAddressValid(lockerContract) && isAddressValid(erc20Contract)) {\n      const abi = (await getABIs()).ERC1155LockedERC20;\n      const abi2 = await fetchOnceJson('erc20-abi.json');\n      const web3 = await getWeb3();\n      if (web3 !== null) {\n        try {\n          const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n          const erc20 = new (web3 as any).eth.Contract(abi2 as any, erc20Contract);\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setConnectedToAccount(false);\n            return;\n          }\n            const allowanceStr = await erc20.methods.allowance(account, lockerContract).call();\n          const allowance = toBN(allowanceStr);\n          const halfBig = toBN(2).pow(toBN(128));\n          if(allowance.lt(halfBig)) {\n            const big = toBN(2).pow(toBN(256)).sub(toBN(1));\n            await mySend(erc20, erc20.methods.approve, [lockerContract, big], {from: account}, null)\n              .catch(e => alert(e.message));\n          }\n          await mySend(erc1155, erc1155.methods.borrowERC20, [erc20Contract, toWei(amount), account, account, []], {from: account}, null)\n            .catch(e => alert(e.message));\n        }\n        catch(e) {\n          alert(e.message);\n        }\n      }\n    }\n  }\n\n  async function approveErc1155Wrapper() {\n    if (isAddressValid(erc20Contract)) {\n      const abi = await fetchOnceJson('erc20-abi.json');\n      const web3 = await getWeb3();\n      if (web3 !== null) {\n        try {\n          const erc20 = new (web3 as any).eth.Contract(abi as any, erc20Contract);\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setConnectedToAccount(false);\n            return;\n          }\n          const allowanceStr = await erc20.methods.allowance(account, wrapperContract).call();\n          const allowance = toBN(allowanceStr);\n          const halfBig = toBN(2).pow(toBN(128));\n          if(allowance.lt(halfBig)) {\n            const big = toBN(2).pow(toBN(256)).sub(toBN(1));\n            await mySend(erc20, erc20.methods.approve, [wrapperContract, big], {from: account}, null)\n              .catch(e => alert(e.message));\n          }\n        }\n        catch(e) {\n          alert(e.message);\n          return;\n        }\n      }\n    }\n  }\n\n  async function unlockErc20fromErc1155() {\n    if (isAddressValid(lockerContract) && isAddressValid(erc20Contract)) {\n      const abi = (await getABIs()).ERC1155LockedERC20;\n      const web3 = await getWeb3();\n      if (web3 !== null) {\n        try {\n          const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setConnectedToAccount(false);\n            return;\n          }\n          await mySend(erc1155, erc1155.methods.returnToERC20, [erc20Contract, toWei(amount), account], {from: account}, null)\n            // .catch(e => alert(e.message));\n        }\n        catch(e) {\n          alert(e.message);\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{marginBottom: 0}}>Manage Smart Crypto Funds</h1>\n        <p style={{marginTop: 0}}>\n          <small>\n            <a href=\"https://github.com/vporton/wrap-tokens\">Docs and source</a> | <a href=\"https://portonvictor.org\">Author</a>\n          </small>\n        </p>\n        <p style={{display: connectedToAccount ? 'none' : 'block', fontSize: '50%', color: 'red', fontWeight: 'bold'}}>Please connect to an Ethereum account!</p>\n        <p>ERC-20 token address:\n          {' '}\n          <Address value={erc20Contract} onChange={async (e: Event) => await setErc20Contract((e.target as HTMLInputElement).value as string)}/>\n          {' '}\n          <span style={{display: erc1155WrapperApproved ? 'none': 'inline'}}>\n            <button onClick={approveErc1155Wrapper} disabled={!isAddressValid(erc20Contract)}>\n              Approve for ERC-1155\n            </button>\n            &nbsp;\n            <span style={{cursor: 'help'}} title=\"Allow the ERC-1155 wrapper contract to transfer funds for you (only when you explicityly request a transfer).\">ⓘ</span>\n          </span>\n          <small style={{display: erc1155WrapperApproved ? 'inline': 'none'}}>\n            (approved for ERC-1155 wrapper)\n          </small>\n        </p>\n        <p>ERC-1155 <small>(has bug)</small> wrapper contract address:{' '}\n          <code className=\"address\">{wrapperContract}</code></p>\n        <p>ERC-1155 token ID:\n          {' '}\n          <WrappedERC20 value={erc1155Token} onChange={async (e: Event) => await setErc1155Token((e.target as HTMLInputElement).value as string)}/></p>\n        <p>ERC-1155 locker contract address:\n          {' '}\n          <Address value={lockerContract} onChange={async (e: Event) => await setLockerContract((e.target as HTMLInputElement).value as string)}/>\n          <br/>\n          <span style={{color: 'red'}}>(Be sure to use only trustworthy locker contracts!)</span></p>\n        <p>Amount on ERC-20:\n          {' '}\n          <span>{erc20Amount === '' ? '–' : fromWei(erc20Amount)}</span>\n          {' '}\n          <span>{erc20Symbol}</span></p>\n        <p>Amount locked in ERC-1155:\n          {' '}\n          <span>{lockedErc1155Amount === '' ? '–' : fromWei(lockedErc1155Amount)}</span></p>\n        <p>\n          Amount:\n          {' '}\n          <Amount value={amount} onChange={(e: Event) => setAmount((e.target as HTMLInputElement).value as string)}/>\n          {' '}\n          <input type=\"button\" value=\"Lock ERC-20 in ERC-1155\" onClick={lockErc20inErc1155}\n                 disabled={!isAddressValid(erc20Contract) || !isRealNumber(amount)}/>\n          {' '}\n          <input type=\"button\" value=\"Unlock ERC-1155 to ERC-20\" onClick={unlockErc20fromErc1155}\n                 disabled={!isAddressValid(erc20Contract) || !isRealNumber(amount)}/>\n        </p>\n        <p>Locking/unlocking is 1/1 swap.</p>\n      </header>\n    </div>\n  );\n}\n\nfunction Address({...props}) {\n  return (\n    <span className=\"Address\">\n      <input type=\"text\"\n             maxLength={42}\n             size={50}\n             value={props.value ? props.value : \"\"}\n             onChange={props.onChange}\n             className={isAddressValid(props.value) ? '' : 'error'}/>\n    </span>\n  )\n}\n\nfunction WrappedERC20({...props}) {\n  return (\n    <span className=\"WrappedERC20\">\n      <input type=\"text\"\n             maxLength={49}\n             size={56}\n             value={props.value}\n             onChange={props.onChange}\n             className={isWrappedTokenValid(props.value) ? '' : 'error'}/>\n    </span>\n  )\n}\n\nfunction Amount({...props}  ) {\n  return (\n    <span className=\"Amount\">\n      <input type=\"text\"\n             value={props.value ? props.value : \"\"}\n             onChange={props.onChange}\n               className={isRealNumber(props.value) ? '' : 'error'}/>\n    </span>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}