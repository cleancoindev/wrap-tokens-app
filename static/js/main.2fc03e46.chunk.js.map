{"version":3,"sources":["ERC20Abi.ts","ERC1155Abi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["erc20Abi","erc1155Abi","Web3","utils","toBN","fromWei","toWei","myWeb3","CHAINS","_web3Provider","baseGetWeb3","a","givenProvider","getChainId","web3","eth","isAddressValid","v","isAddress","isUint256Valid","test","lt","pow","isWrappedTokenValid","isRealNumber","_fetchedJsonPromises","Map","_fetched","fetchOnceJsonPromise","url","promise","get","fetch","fetchResult","json","set","fetchOnceJson","Address","props","className","type","style","maxWidth","width","maxLength","size","value","onChange","Uint256","WrappedERC20","Amount","App","useState","connectedToAccount","setConnectedToAccount","getWeb3","window","ethereum","enable","catch","_","getAccounts","then","accounts","length","getABIs","getAddresses","Promise","all","chainId","mySend","contract","method","args","sendArgs","handler","account","bind","estimateGas","gas","from","estimatedGas","String","Math","floor","Number","send","exact","to","marginTop","href","display","fontSize","color","fontWeight","path","component","lockerContract","setLockerContract","lockedErc1155Amount","setLockedErc1155Amount","amount","setAmount","myEvents","connectEvents","console","log","clearSubscriptions","abi","ERC1155LockedETH","erc1155","Contract","events","TransferSingle","filter","_to","loadLockedIn1155","TransferBatch","methods","balanceOf","call","balance","e","borrowETH","alert","message","returnToETH","on","addresses","address","useEffect","connect","fetchData","target","onClick","disabled","erc20Contract","setErc20Contract","erc1155Token","setErc1155Token","wrapperContract","setWrapperContract","erc20Amount","setErc20Amount","erc20Symbol","setErc20Symbol","erc1155WrapperApproved","setErc1155WrapperApproved","ERC1155LockedERC20","erc20","Transfer","loadErc20","Approval","owner","spender","checkErc1155WrapperApproved","symbol","allowance","allowanceStr","halfBig","abi2","big","sub","approve","toString","borrowERC20","returnToERC20","ERC1155OverERC20","tokenId","hex","toHex","addr","replace","repeat","checksumed","toChecksumAddress","cursor","title","erc1155Contract","setErc1155Contract","erc1155Token2","setErc1155Token2","erc20WrapperApproved","setErc20WrapperApproved","wrapperContract2","setWrapperContract2","lockerContract2","setLockerContract2","erc1155Amount","setErc1155Amount","lockedErc20Amount","setLockedErc20Amount","loadRegistered","ERC20Registry","contractAddress","registry","getWrapper","address1","getLocker","address2","loadErc1155","loadLockedIn20","ERC20LockedERC1155","checkErc20WrapperApproved","isApprovedForAll","approved","registerWrapper","tx","registerLocker","_from","ApprovalForAll","operator","setApprovalForAll","borrowERC1155","returnToERC1155","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fc03e46.chunk.js","sourcesContent":["const erc20Abi = [\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_from\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"payable\": true,\n        \"stateMutability\": \"payable\",\n        \"type\": \"fallback\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    }\n];\n\nexport default erc20Abi;","const erc1155Abi = [{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_update\",\"type\":\"string\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_initialSupplies\",\"type\":\"uint256[]\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"batchCreate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"CreationName\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"}];\n\nexport default erc1155Abi;","import React, { useState, useEffect } from 'react';\nimport {\n  Route,\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport './App.css';\nimport Web3 from 'web3';\n// MEWConnect does not work on Firefox 84.0 for Ubuntu.\n// import Web3Modal from \"web3modal\";\n// import MewConnect from '@myetherwallet/mewconnect-web-client';\nimport erc20Abi from './ERC20Abi';\nimport erc1155Abi from './ERC1155Abi';\nconst { toBN, fromWei, toWei } = Web3.utils;\n\nlet myWeb3: any = null;\n\n// TODO: Show pending transactions.\n// TODO: Better dialog than alert()\n// TODO: Show a warning if ERC-20 address points to a non-existing contract.\n\n// TODO\nconst CHAINS: { [id: string] : string } = {\n  '1': 'mainnet',\n  '3': 'ropsten',\n  '4': 'rinkeby',\n  '5': 'goerli',\n  '42': 'kovan',\n  '1337': 'local',\n  '122': 'fuse',\n  '80001': 'mumbai',\n  '137': 'matic',\n  '99': 'core',\n  '77': 'sokol',\n  '100': 'xdai',\n  '74': 'idchain',\n  '56': 'bsc',\n  '97': 'bsctest',\n}\n\nlet _web3Provider: any = null;\n// let _web3Modal: any = null;\n\n// async function myWeb3Modal() {\n//   if (_web3Modal) {\n//     return _web3Modal;\n//   }\n\n//   // const MewConnect = require('@myetherwallet/mewconnect-web-client');\n\n//   const providerOptions = {\n//       mewconnect: {\n//           package: MewConnect, // required\n//           options: {\n//               infuraId: process.env.REACT_APP_INFURA_ID || '859569f6decc4446a5da1bb680e7e9cf'\n//           }\n//       }\n//   };\n\n//   return _web3Modal = new Web3Modal({\n//     network: 'mainnet',\n//     cacheProvider: true,\n//     providerOptions\n//   });\n// }\n\n// async function getWeb3Provider() {\n//   if(_web3Provider) {\n//     return _web3Provider;\n//   } else {\n//     // await connectEvents();\n//   }\n//   return _web3Provider = (window as any).ethereum ? await (await myWeb3Modal()).connect() : null;\n// }\n\nasync function baseGetWeb3() {\n  if(myWeb3) return myWeb3;\n\n  _web3Provider = Web3.givenProvider; //await getWeb3Provider();\n  return myWeb3 = _web3Provider ? new Web3(_web3Provider) : null;\n}\n\nasync function getChainId(): Promise<any> { // TODO: more specific type\n  const web3 = await baseGetWeb3();\n  if (!web3) {\n    return null;\n  }\n  return await (web3 as any).eth.getChainId();\n}\n\nfunction isAddressValid(v: string): boolean { // TODO: called twice\n  return Web3.utils.isAddress(v);\n}\n\nfunction isUint256Valid(v: string): boolean { // TODO: called twice\n  return /^[0-9]+$/.test(v) && toBN(v).lt(toBN(2).pow(toBN(256)));\n}\n\nfunction isWrappedTokenValid(v: string): boolean { // TODO: called twice\n  return /^[0-9]+$/.test(v) && toBN(v).lt(toBN(2).pow(toBN(160)));\n}\n\nfunction isRealNumber(v: string): boolean { // TODO: called twice\n  return /^[0-9]+(\\.[0-9]+)?$/.test(v);\n}\n\n// let _fetchedPromises = new Map<string, Promise<any>>();\nlet _fetchedJsonPromises = new Map<string, Promise<any>>();\nlet _fetched = new Map<string, any>();\n\nasync function fetchOnceJsonPromise(url: string): Promise<Promise<any>> {\n  let promise = _fetchedJsonPromises.get(url);\n  if (promise) {\n    return promise;\n  } else {\n    const fetchResult = await fetch(url);\n    promise = fetchResult.json() as Promise<any>;\n    _fetchedJsonPromises.set(url, promise);\n    return await promise;\n  }\n}\n\nasync function fetchOnceJson(url: string): Promise<any> {\n  let json = _fetched.get(url);\n  if (json) {\n    return json;\n  } else {\n    json = await fetchOnceJsonPromise(url);\n    _fetched.set(url, json);\n    return json;\n  }\n}\n\nfunction App() {\n  const [connectedToAccount, setConnectedToAccount] = useState(true); // Don't show the message by default.\n\n  async function getWeb3() {\n    try {\n      (window as any).ethereum.enable().catch(() => {}); // Without this catch Firefox 84.0 crashes on user pressing Cancel.\n    }\n    catch(_) { }\n    const web3 = await baseGetWeb3();\n    getAccounts().then((accounts) => {\n      setConnectedToAccount(accounts && accounts.length !== 0);\n    });\n    return web3;\n  }\n\n  async function getABIs() {\n    return await fetchOnceJson(`abis.json`);\n  }\n\n  async function getAddresses() {\n    const [json, chainId] = await Promise.all([fetchOnceJson(`addresses.json`), getChainId()]);\n    return CHAINS[chainId] ? json[CHAINS[chainId]] : null;\n  }\n\n  async function getAccounts(): Promise<Array<string>> {\n    const web3 = await baseGetWeb3();\n    return web3 ? (web3 as any).eth.getAccounts() : null;\n  }\n\n  // FIXME: returns Promise?\n  async function mySend(contract: string, method: any, args: Array<any>, sendArgs: any, handler: any): Promise<any> {\n    sendArgs = sendArgs || {}\n    const account = (await getAccounts())[0];\n    return method.bind(contract)(...args).estimateGas({gas: '1000000', from: account, ...sendArgs})\n        .then((estimatedGas: string) => {\n            const gas = String(Math.floor(Number(estimatedGas) * 1.15) + 24000);\n            if(handler !== null)\n                return method.bind(contract)(...args).send({gas, from: account, ...sendArgs}, handler);\n            else\n                return method.bind(contract)(...args).send({gas, from: account, ...sendArgs});\n        });\n  }\n  \n  function ETHToERC1155() {\n    const [lockerContract, setLockerContract] = useState('');\n    const [lockedErc1155Amount, setLockedErc1155Amount] = useState('');\n    const [amount, setAmount] = useState('');\n  \n    let myEvents = [null, null];\n    \n    // TODO: Connect two contracts separately.\n    async function connectEvents(lockerContract: string) {\n      console.log('connectEvents')\n      // for (let ev of myEvents) {\n      //   if(ev) (ev as any).unsubscribe();\n      // }\n      \n      const web3 = await getWeb3();\n      if(web3 === null) return;\n      web3.eth.clearSubscriptions();\n      const account = (await getAccounts())[0];\n      if(!account) return;\n      if (isAddressValid(lockerContract)) {\n        const abi = (await getABIs()).ERC1155LockedETH;\n        const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n        myEvents[0] = erc1155.events.TransferSingle({filter: {_to: account}}, async () => {\n          return await loadLockedIn1155();\n        });\n        myEvents[1] = erc1155.events.TransferBatch({filter: {_to: account}}, async () => {\n          return await loadLockedIn1155();\n        });\n      }\n    }\n  \n    if ((window as any).ethereum) {\n      (window as any).ethereum.on('chainChanged', async (chainId: any) => { // TODO: more specific type\n        // TODO: hacky code\n        // TODO: duplicate code\n        await getAddresses().then((addresses) => {\n          if (addresses && addresses.ERC1155LockedETH) {\n            setLockerContract(addresses.ERC1155LockedETH.address);\n          }\n        });\n        await loadLockedIn1155();\n      });\n  \n      (window as any).ethereum.on('accountsChanged', async function (accounts: Array<string>) {\n        setConnectedToAccount(accounts.length !== 0);\n      });\n    }\n\n    useEffect(() => {\n      async function connect() {\n        await connectEvents(lockerContract);\n      }\n\n      connect();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lockerContract]);\n\n    async function loadLockedIn1155() {\n      // TODO: Don't call functions repeatedly.\n      if (isAddressValid(lockerContract)) {\n        const abi = (await getABIs()).ERC1155LockedETH;\n        if (abi) {\n          const web3 = await getWeb3();\n          if (web3 !== null) {\n            const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n    \n            erc1155.methods.balanceOf(account, 0).call()\n              .then((balance: string) => {\n                setLockedErc1155Amount(balance);\n              })\n              .catch((e: any) => {\n                setLockedErc1155Amount(\"\");\n              });\n          } else {\n            setLockedErc1155Amount(\"\");\n          }\n        }\n      } else {\n        setLockedErc1155Amount(\"\");\n      }\n    }\n  \n    useEffect(() => {\n      async function fetchData() {\n        await loadLockedIn1155();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lockerContract]);\n\n    // Without this does not load on Chromium, when coming by an external link:\n    getAddresses().then((addresses) => {\n      if (addresses && addresses.ERC1155LockedETH) { // FIXME: It does not work on mainnet\n        setLockerContract(addresses.ERC1155LockedETH.address);\n      }\n    });\n  \n    async function lockETHinErc1155() {\n      if (isAddressValid(lockerContract)) {\n        const abi = (await getABIs()).ERC1155LockedETH;\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            await mySend(erc1155, erc1155.methods.borrowETH, [account, []], {from: account, value: toWei(amount)}, null)\n              .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n          }\n        }\n      }\n    }\n  \n    async function unlockETHfromErc1155() {\n      if (isAddressValid(lockerContract)) {\n        const abi = (await getABIs()).ERC1155LockedETH;\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            await mySend(erc1155, erc1155.methods.returnToETH, [toWei(amount), account], {from: account}, null)\n              // .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n          }\n        }\n      }\n    }\n  \n    return (\n      <div>\n        <p>ERC-1155 token ID: 0</p>\n        <p>ERC-1155 locker contract address:\n          {' '}\n          <Address value={lockerContract} onChange={async (e: Event) => await setLockerContract((e.target as HTMLInputElement).value as string)}/>\n          <br/>\n          <span style={{color: 'red'}}>(Be sure to use only trustworthy locker contracts!)</span></p>\n        <p>Amount locked in ERC-1155:\n          {' '}\n          <span>{lockedErc1155Amount === '' ? '–' : fromWei(lockedErc1155Amount)}</span></p>\n        <p>\n          Amount:\n          {' '}\n          <Amount value={amount} onChange={(e: Event) => setAmount((e.target as HTMLInputElement).value as string)}/>\n          {' '}\n          <input type=\"button\" value=\"Lock ETH in ERC-1155\" onClick={lockETHinErc1155}\n                 disabled={!isRealNumber(amount)}/>\n          {' '}\n          <input type=\"button\" value=\"Unlock ERC-1155 to ETH\" onClick={unlockETHfromErc1155}\n                 disabled={!isRealNumber(amount)}/>\n        </p>\n        <p>Locking/unlocking is 1/1 swap.</p>\n      </div>\n    );\n  }\n\n  function Erc20ToERC1155() {\n    const [erc20Contract, setErc20Contract] = useState('');\n    const [erc1155Token, setErc1155Token] = useState('');\n    const [lockerContract, setLockerContract] = useState('');\n    const [wrapperContract, setWrapperContract] = useState('');\n    const [erc20Amount, setErc20Amount] = useState('');\n    const [erc20Symbol, setErc20Symbol] = useState('');\n    const [lockedErc1155Amount, setLockedErc1155Amount] = useState('');\n    const [amount, setAmount] = useState('');\n    const [erc1155WrapperApproved, setErc1155WrapperApproved] = useState(false);\n  \n    let myEvents = [null, null, null, null, null];\n    \n    // TODO: Connect two contracts separately.\n    async function connectEvents(erc20Contract: string, lockerContract: string, erc1155Token: string) {\n      console.log('connectEvents')\n      // for (let ev of myEvents) {\n      //   if(ev) (ev as any).unsubscribe();\n      // }\n      \n      if(!isAddressValid(erc20Contract)) {\n        return;\n      }\n      const web3 = await getWeb3();\n      if(web3 === null) return;\n      web3.eth.clearSubscriptions();\n      const account = (await getAccounts())[0];\n      if(!account) return;\n      if (isAddressValid(lockerContract)) {\n        const abi = (await getABIs()).ERC1155LockedERC20;\n        const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n        myEvents[0] = erc1155.events.TransferSingle({filter: {_to: account}}, async () => {\n          return await loadLockedIn1155();\n        });\n        myEvents[1] = erc1155.events.TransferBatch({filter: {_to: account}}, async () => {\n          return await loadLockedIn1155();\n        });\n      }\n      if (isAddressValid(erc20Contract)) {\n        const abi = await fetchOnceJson('erc20-abi.json');\n        const erc20 = new (web3 as any).eth.Contract(abi, erc20Contract);\n        // TODO: Don't reload token symbol.\n        myEvents[2] = erc20.events.Transfer({filter: {to: account}}, async () => {\n          return await loadErc20();\n        });\n        myEvents[3] = erc20.events.Transfer({filter: {from: account}}, async () => {\n          return await loadErc20();\n        });\n  \n        // TODO: Don't reload token symbol.\n        myEvents[4] = erc20.events.Approval({filter: {owner: account, spender: wrapperContract}}, async () => {\n          return await checkErc1155WrapperApproved();\n        });\n      }\n    }\n  \n    if ((window as any).ethereum) {\n      (window as any).ethereum.on('chainChanged', async (chainId: any) => { // TODO: more specific type\n        // TODO: hacky code\n        // TODO: duplicate code\n        await getAddresses().then((addresses) => {\n          if (addresses) {\n            setLockerContract(addresses.ERC1155LockedERC20.address);\n            setWrapperContract(addresses.ERC1155OverERC20.address);\n          }\n        });\n        await loadLockedIn1155();\n        await loadErc20();\n      });\n  \n      (window as any).ethereum.on('accountsChanged', async function (accounts: Array<string>) {\n        if (isAddressValid(erc20Contract)) {\n          setConnectedToAccount(accounts.length !== 0);\n          await loadErc20();\n        }\n      });\n    }\n\n    useEffect(() => {\n      async function fetchData() {\n        await checkErc1155WrapperApproved();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [wrapperContract]);\n\n    useEffect(() => {\n      async function fetchData() {\n        let tokenId = \"\";\n        if(isAddressValid(erc20Contract)) {\n          tokenId = toBN(erc20Contract).toString();\n          setErc1155Token(tokenId);\n        } else {\n          setErc1155Token(\"\");\n        }\n        await loadErc20();\n        await checkErc1155WrapperApproved();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [erc20Contract]);\n\n    useEffect(() => {\n      async function fetchData() {\n        if(isWrappedTokenValid(erc1155Token)) {\n          const hex = Web3.utils.toHex(erc1155Token);\n          const addr = hex.replace(/^0x/, '0x' + '0'.repeat(42 - hex.length))\n          const checksumed = Web3.utils.toChecksumAddress(addr);\n          setErc20Contract(checksumed);\n        } else {\n          setErc20Contract(\"\");\n        }\n        await loadLockedIn1155();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [erc1155Token]);\n\n    useEffect(() => {\n      async function connect() {\n        await connectEvents(erc20Contract, lockerContract, erc1155Token);\n      }\n\n      connect();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [erc20Contract, lockerContract, erc1155Token]);\n\n    async function loadErc20() {\n      // TODO: Don't call functions repeatedly.\n      if (isAddressValid(erc20Contract)) {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          const erc20 = new (web3 as any).eth.Contract(erc20Abi as any, erc20Contract);\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setConnectedToAccount(false);\n            return;\n          }\n        \n          erc20.methods.balanceOf(account).call()\n            .then((balance: string) => {\n              setErc20Amount(balance);\n            })\n            .catch(() => {\n              setErc20Amount(\"\");\n            });\n  \n          erc20.methods.symbol().call()\n            .then((symbol: string) => {\n              setErc20Symbol(symbol);\n            })\n            .catch(() => {\n              setErc20Symbol(\"\");\n            });\n        } else {\n          setErc20Amount(\"\");\n          setErc20Symbol(\"\");\n        }\n      } else {\n        setErc20Amount(\"\");\n        setErc20Symbol(\"\");\n      }\n    }\n  \n    async function loadLockedIn1155() {\n      // TODO: Don't call functions repeatedly.\n      if (isAddressValid(lockerContract) && isWrappedTokenValid(erc1155Token)) {\n        const abi = (await getABIs()).ERC1155LockedERC20;\n        if (abi) {\n          const web3 = await getWeb3();\n          if (web3 !== null) {\n            const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n    \n            if (isWrappedTokenValid(erc1155Token)) {\n              erc1155.methods.balanceOf(account, erc1155Token).call()\n                .then((balance: string) => {\n                  setLockedErc1155Amount(balance);\n                })\n                .catch((e: any) => {\n                  setLockedErc1155Amount(\"\");\n                });\n            } else {\n              setLockedErc1155Amount(\"\");\n            }\n          } else {\n            setLockedErc1155Amount(\"\");\n          }\n        }\n      } else {\n        setLockedErc1155Amount(\"\");\n      }\n    }\n\n    async function checkErc1155WrapperApproved() {\n      if (isAddressValid(wrapperContract)) {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setErc1155WrapperApproved(false);\n            return;\n          }\n          try {\n            const erc20 = new (web3 as any).eth.Contract(erc20Abi as any, erc20Contract);\n            const allowanceStr = await erc20.methods.allowance(account, wrapperContract).call();\n            const allowance = toBN(allowanceStr);\n            const halfBig = toBN(2).pow(toBN(128));\n            setErc1155WrapperApproved(!allowance.lt(halfBig));\n          }\n          catch(_) {\n            setErc1155WrapperApproved(false);\n          }\n        } else {\n          setErc1155WrapperApproved(false);\n        }\n      } else {\n        setErc1155WrapperApproved(false);\n      }\n    }\n  \n    useEffect(() => {\n      async function fetchData() {\n        await loadLockedIn1155();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lockerContract]);\n\n    // Without this does not load on Chromium, when coming by an external link:\n    getAddresses().then((addresses) => {\n      if (addresses) {\n        setLockerContract(addresses.ERC1155LockedERC20.address);\n        setWrapperContract(addresses.ERC1155OverERC20.address);\n      }\n    });\n  \n    async function lockErc20inErc1155() {\n      if (isAddressValid(lockerContract) && isAddressValid(erc20Contract)) {\n        const abi = (await getABIs()).ERC1155LockedERC20;\n        const abi2 = await fetchOnceJson('erc20-abi.json');\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n            const erc20 = new (web3 as any).eth.Contract(abi2 as any, erc20Contract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            const allowanceStr = await erc20.methods.allowance(account, lockerContract).call();\n            const allowance = toBN(allowanceStr);\n            const halfBig = toBN(2).pow(toBN(128));\n            if(allowance.lt(halfBig)) {\n              const big = toBN(2).pow(toBN(256)).sub(toBN(1));\n              await mySend(erc20, erc20.methods.approve, [lockerContract, big.toString()], {from: account}, null)\n                // .catch(e => alert(e.message));\n            }\n            await mySend(erc1155, erc1155.methods.borrowERC20, [erc20Contract, toWei(amount), account, account, []], {from: account}, null)\n              .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n          }\n        }\n      }\n    }\n  \n    async function approveErc1155Wrapper() {\n      if (isAddressValid(erc20Contract)) {\n        const abi = await fetchOnceJson('erc20-abi.json');\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc20 = new (web3 as any).eth.Contract(abi as any, erc20Contract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            const big = toBN(2).pow(toBN(256)).sub(toBN(1));\n            await mySend(erc20, erc20.methods.approve, [wrapperContract, big], {from: account}, null)\n              // .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n            return;\n          }\n        }\n      }\n    }\n  \n    async function unlockErc20fromErc1155() {\n      if (isAddressValid(lockerContract) && isAddressValid(erc20Contract)) {\n        const abi = (await getABIs()).ERC1155LockedERC20;\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc1155 = new (web3 as any).eth.Contract(abi as any, lockerContract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            await mySend(erc1155, erc1155.methods.returnToERC20, [erc20Contract, toWei(amount), account], {from: account}, null)\n              // .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n          }\n        }\n      }\n    }\n  \n    return (\n      <div>\n        <p>ERC-20 token address:\n          {' '}\n          <Address value={erc20Contract} onChange={async (e: Event) => await setErc20Contract((e.target as HTMLInputElement).value as string)}/>\n          {' '}\n          <span style={{display: erc1155WrapperApproved ? 'none': 'inline'}}>\n            <button onClick={approveErc1155Wrapper} disabled={!isAddressValid(erc20Contract)}>\n              Approve for ERC-1155\n            </button>\n            &nbsp;\n            <span style={{cursor: 'help'}} title=\"Allow the ERC-1155 wrapper contract to transfer funds for you (only when you explicitly request a transfer).\">ⓘ</span>\n          </span>\n          <small style={{display: erc1155WrapperApproved ? 'inline': 'none'}}>\n            (approved for ERC-1155 wrapper)\n          </small>\n        </p>\n        <p>ERC-1155 <small>(has non-dangerous bug)</small> wrapper contract address:{' '}\n          <code className=\"address\">{wrapperContract}</code></p>\n        <p>ERC-1155 token ID:\n          {' '}\n          <WrappedERC20 value={erc1155Token} onChange={async (e: Event) => await setErc1155Token((e.target as HTMLInputElement).value as string)}/></p>\n        <p>ERC-1155 locker contract address:\n          {' '}\n          <Address value={lockerContract} onChange={async (e: Event) => await setLockerContract((e.target as HTMLInputElement).value as string)}/>\n          <br/>\n          <span style={{color: 'red'}}>\n            (Be sure to use only trustworthy locker contracts!)\n          </span>\n        </p>\n        <p>Amount on ERC-20:\n          {' '}\n          <span>{erc20Amount === '' ? '–' : fromWei(erc20Amount)}</span>\n          {' '}\n          <span>{erc20Symbol}</span></p>\n        <p>Amount locked in ERC-1155:\n          {' '}\n          <span>{lockedErc1155Amount === '' ? '–' : fromWei(lockedErc1155Amount)}</span></p>\n        <p>\n          Amount:\n          {' '}\n          <Amount value={amount} onChange={(e: Event) => setAmount((e.target as HTMLInputElement).value as string)}/>\n          {' '}\n          <input type=\"button\" value=\"Lock ERC-20 in ERC-1155\" onClick={lockErc20inErc1155}\n                disabled={!isAddressValid(erc20Contract) || !isRealNumber(amount)}/>\n          {' '}\n          <input type=\"button\" value=\"Unlock ERC-1155 to ERC-20\" onClick={unlockErc20fromErc1155}\n                disabled={!isAddressValid(erc20Contract) || !isRealNumber(amount)}/>\n        </p>\n        <p>Locking/unlocking is 1/1 swap.</p>\n      </div>\n    );\n  }\n\n  function Erc1155ToERC20() {\n    const [erc1155Contract, setErc1155Contract] = useState('');\n    const [erc1155Token2, setErc1155Token2] = useState('');\n    const [erc20WrapperApproved, setErc20WrapperApproved] = useState(false);\n    const [wrapperContract2, setWrapperContract2] = useState('');\n    const [lockerContract2, setLockerContract2] = useState('');\n    const [erc1155Amount, setErc1155Amount] = useState('');\n    const [amount, setAmount] = useState('');\n    const [lockedErc20Amount, setLockedErc20Amount] = useState('');\n\n    async function loadRegistered() {\n      if (isAddressValid(erc1155Contract) && isUint256Valid(erc1155Token2)) {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          const abi = (await getABIs()).ERC20Registry;\n          const contractAddress = (await getAddresses())[\"ERC20Registry\"].address;\n          const registry = new (web3 as any).eth.Contract(abi, contractAddress);\n\n          const address1 = await registry.methods.getWrapper(erc1155Contract, erc1155Token2).call();\n          setWrapperContract2(/^0x0+$/.test(address1) ? \"\" : address1);\n          const address2 = await registry.methods.getLocker(erc1155Contract, erc1155Token2).call();\n          setLockerContract2(/^0x0+$/.test(address2) ? \"\" : address2);\n        }\n      }\n    }\n\n    useEffect(() => {\n      async function fetchData() {\n        await loadRegistered();\n        await loadErc1155();\n        await connectEvents();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [erc1155Contract, erc1155Token2]);\n\n    useEffect(() => {\n      async function fetchData() {\n        await checkErc20WrapperApproved();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [erc1155Contract, wrapperContract2]);\n\n    useEffect(() => {\n      async function fetchData() {\n        await connectEvents();\n        await loadLockedIn20();\n      }\n\n      fetchData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lockerContract2]);\n\n    async function loadErc1155() {\n      // TODO: Don't call functions repeatedly.\n      if (isAddressValid(erc1155Contract) && isUint256Valid(erc1155Token2)) {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          const erc1155 = new (web3 as any).eth.Contract(erc1155Abi as any, erc1155Contract);\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setConnectedToAccount(false);\n            return;\n          }\n\n          erc1155.methods.balanceOf(account, erc1155Token2).call()\n            .then((balance: string) => {\n              setErc1155Amount(balance);\n            })\n            .catch(() => {\n              setErc1155Amount(\"\");\n            });\n        } else {\n          setErc1155Amount(\"\");\n        }\n      } else {\n        setErc1155Amount(\"\");\n      }\n    }\n  \n    async function loadLockedIn20() {\n      // TODO: Don't call functions repeatedly.\n      if (isAddressValid(lockerContract2)) {\n        const abi = (await getABIs()).ERC20LockedERC1155;\n        if (abi) {\n          const web3 = await getWeb3();\n          if (web3 !== null) {\n            const erc20 = new (web3 as any).eth.Contract(abi as any, lockerContract2);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n\n            erc20.methods.balanceOf(account).call()\n              .then((balance: string) => {\n                setLockedErc20Amount(balance);\n              })\n              .catch((e: any) => {\n                setLockedErc20Amount(\"\");\n              });\n          } else {\n            setLockedErc20Amount(\"\");\n          }\n        }\n      } else {\n        setLockedErc20Amount(\"\");\n      }\n    }\n  \n    async function checkErc20WrapperApproved() {\n      if (isAddressValid(erc1155Contract) && wrapperContract2 !== '') {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          const account = (await getAccounts())[0];\n          if(!account) {\n            setErc20WrapperApproved(false);\n            return;\n          }\n          try {\n            const erc1155 = new (web3 as any).eth.Contract(erc1155Abi as any, erc1155Contract);\n            const approved = await erc1155.methods.isApprovedForAll(account, wrapperContract2).call();\n            setErc20WrapperApproved(approved);\n          }\n          catch(_) {\n            setErc20WrapperApproved(false);\n          }\n        } else {\n          setErc20WrapperApproved(false);\n        }\n      } else {\n        setErc20WrapperApproved(false);\n      }\n    }\n  \n    async function createErc20Wrapper() {\n      const web3 = await getWeb3();\n      const abi = (await getABIs()).ERC20Registry;\n      const account = (await getAccounts())[0];\n      const contractAddress = (await getAddresses())[\"ERC20Registry\"].address;\n      const registry = new (web3 as any).eth.Contract(abi, contractAddress);\n      const tx = await mySend(\n          registry,\n          registry.methods.registerWrapper,\n          [erc1155Contract, erc1155Token2],\n          {from: account},\n          null\n        )\n        .catch(e => alert(e.message))\n        .then(async tx => {\n          /*const receipt =*/ await tx;\n          const address = await registry.methods.getWrapper(erc1155Contract, erc1155Token2).call();\n          setWrapperContract2(address);\n        });\n    }\n\n    async function createErc20Locker() {\n      const web3 = await getWeb3();\n      const abi = (await getABIs()).ERC20Registry;\n      const account = (await getAccounts())[0];\n      const contractAddress = (await getAddresses())[\"ERC20Registry\"].address;\n      const registry = new (web3 as any).eth.Contract(abi, contractAddress);\n      const tx = await mySend(\n          registry,\n          registry.methods.registerLocker,\n          [erc1155Contract, erc1155Token2],\n          {from: account},\n          null\n        )\n        .catch(e => alert(e.message))\n        .then(async tx => {\n          /*const receipt =*/ await tx;\n          const address = await registry.methods.getLocker(erc1155Contract, erc1155Token2).call();\n          setLockerContract2(address);\n        });\n    }\n\n    let myEvents = [null, null, null, null, null];\n    \n    // TODO: Connect two contracts separately.\n    async function connectEvents() {\n      console.log('connectEvents2')\n      // for (let ev of myEvents) {\n      //   if(ev) (ev as any).unsubscribe();\n      // }\n      \n      const web3 = await getWeb3();\n      if(web3 === null) return;\n      web3.eth.clearSubscriptions(); // FIXME: clears also the other page!\n      const account = (await getAccounts())[0];\n      if(!account) return;\n      console.log('lockerContract2', lockerContract2)\n      if (isAddressValid(lockerContract2)) {\n        const abi = (await getABIs()).ERC20LockedERC1155;\n        const erc20 = new (web3 as any).eth.Contract(abi as any, lockerContract2);\n        myEvents[0] = erc20.events.Transfer({filter: {to: account}}, async () => {\n          return await loadLockedIn20();\n        });\n        myEvents[1] = erc20.events.Transfer({filter: {from: account}}, async () => {\n          return await loadLockedIn20();\n        });\n      }\n      try {\n        const erc1155 = new (web3 as any).eth.Contract(erc1155Abi, erc1155Contract);\n        // TODO: Don't reload token symbol.\n        myEvents[2] = erc1155.events.TransferSingle({filter: {_to: account}}, async () => {\n          return await loadErc1155();\n        });\n        myEvents[3] = erc1155.events.TransferSingle({filter: {_from: account}}, async () => {\n          return await loadErc1155();\n        });\n  \n        // TODO: Don't reload token symbol.\n        myEvents[4] = erc1155.events.ApprovalForAll({filter: {account: account, operator: wrapperContract2}}, async () => {\n          return await checkErc20WrapperApproved();\n        });\n      }\n      catch(_) { }\n    }\n\n    async function lockErc1155inErc20() {\n      if (isAddressValid(lockerContract2)) {\n        const abi = (await getABIs()).ERC20LockedERC1155;\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc20 = new (web3 as any).eth.Contract(abi as any, lockerContract2);\n            const erc1155 = new (web3 as any).eth.Contract(erc1155Abi as any, erc1155Contract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            const approved = await erc1155.methods.isApprovedForAll(account, lockerContract2).call();\n            if(!approved) {\n              await mySend(erc1155, erc1155.methods.setApprovalForAll, [lockerContract2, true], {from: account}, null)\n                // .catch(e => alert(e.message));\n            }\n            await mySend(erc20, erc20.methods.borrowERC1155, [toWei(amount), account, account, []], {from: account}, null)\n              .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n          }\n        }\n      }\n    }\n  \n    async function approveErc20Wrapper() {\n      if (isAddressValid(lockerContract2)) {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc1155 = new (web3 as any).eth.Contract(erc1155Abi, erc1155Contract);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            await mySend(erc1155, erc1155.methods.setApprovalForAll, [wrapperContract2, true], {from: account}, null)\n              // .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n            return;\n          }\n        }\n      }\n    }\n  \n    async function unlockErc1155fromErc20() {\n      const abi = (await getABIs()).ERC20LockedERC1155;\n      if (isAddressValid(lockerContract2)) {\n        const web3 = await getWeb3();\n        if (web3 !== null) {\n          try {\n            const erc20 = new (web3 as any).eth.Contract(abi as any, lockerContract2);\n            const account = (await getAccounts())[0];\n            if(!account) {\n              setConnectedToAccount(false);\n              return;\n            }\n            await mySend(erc20, erc20.methods.returnToERC1155, [toWei(amount), account, []], {from: account}, null)\n              // .catch(e => alert(e.message));\n          }\n          catch(e) {\n            alert(e.message);\n          }\n        }\n      }\n    }\n  \n    return (\n      <div>\n        <p>ERC-1155 contract:\n          {' '}\n          <Address value={erc1155Contract} onChange={async (e: Event) => await setErc1155Contract((e.target as HTMLInputElement).value as string)}/>\n          {' '}\n          <span style={{display: erc20WrapperApproved ? 'none': 'inline'}}>\n            <button onClick={approveErc20Wrapper} disabled={wrapperContract2 === \"\" || erc20WrapperApproved}>\n              Approve for ERC-20\n            </button>\n            &nbsp;\n            <span style={{cursor: 'help'}} title=\"Allow the ERC-20 wrapper contract to transfer funds for you (only when you explicitly request a transfer).\">ⓘ</span>\n          </span>\n          <small style={{display: erc20WrapperApproved ? 'inline': 'none'}}>\n            (approved for ERC-20 wrapper)\n          </small>\n        </p>\n        <p>ERC-1155 token ID:\n          {' '}\n          <Uint256 value={erc1155Token2}\n                   onChange={async (e: Event) => await setErc1155Token2((e.target as HTMLInputElement).value as string)}/>\n        </p>\n        <p>Wrapper contract:\n          {' '}\n          <code className=\"address\">{wrapperContract2}</code>\n          {' '}\n          <button onClick={createErc20Wrapper}\n                  style={{display: wrapperContract2 !== '' ? 'none' : 'inline'}}\n                  disabled={!isAddressValid(erc1155Contract) || !isUint256Valid(erc1155Token2)}>Create</button></p>\n        <p>Locker contract:\n          {' '}\n          <code className=\"address\">{lockerContract2}</code>\n          {' '}\n          <button onClick={createErc20Locker}\n                  style={{display: lockerContract2 !== '' ? 'none' : 'inline'}}\n                  disabled={!isAddressValid(erc1155Contract) || !isUint256Valid(erc1155Token2)}>Create</button></p>\n        <p>Amount on ERC-1155:\n          {' '}\n          <span>{erc1155Amount === '' ? '–' : fromWei(erc1155Amount)}</span></p>\n        <p>Amount locked in ERC-20:\n          {' '}\n          <span>{lockedErc20Amount === '' ? '–' : fromWei(lockedErc20Amount)}</span></p>\n        <p>\n          Amount:\n          {' '}\n          <Amount value={amount} onChange={(e: Event) => setAmount((e.target as HTMLInputElement).value as string)}/>\n          {' '}\n          <input type=\"button\" value=\"Lock ERC-1155 in ERC-20\" onClick={lockErc1155inErc20}\n                 disabled={!isAddressValid(lockerContract2)}/>\n          {' '}\n          <input type=\"button\" value=\"Unlock ERC-1155 in ERC-20\" onClick={unlockErc1155fromErc20}\n                 disabled={!isAddressValid(lockerContract2)}/>\n        </p>\n        <p>Locking/unlocking is 1/1 swap.</p>\n      </div>\n    );\n  }\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ul className=\"header\">\n            <li><NavLink exact to=\"/\">ETH &rarr; ERC1155</NavLink></li>\n            <li><NavLink to=\"/erc20toErc1155\">ERC20 &rarr; ERC1155</NavLink></li>\n            <li><NavLink to=\"/erc1155toErc20\">ERC1155 &rarr; ERC20</NavLink></li>\n          </ul>\n          <p style={{marginTop: 0}}>\n            <small>\n              <a href=\"https://github.com/vporton/wrap-tokens\">Docs and source</a>\n              {' '}|{' '}\n              <a href=\"https://portonvictor.org\">Author</a>\n              {' '}|{' '}\n              <a href=\"https://gitcoin.co/grants/1865/convert-erc-1155-erc-20-need-021224376-eth\">\n                Donate for full deployment on mainnet\n              </a>\n            </small>\n          </p>\n          <p style={{display: connectedToAccount ? 'none' : 'block', fontSize: '50%', color: 'red', fontWeight: 'bold'}}>Please connect to an Ethereum account!</p>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={ETHToERC1155}/>\n            <Route path=\"/erc20toErc1155\" component={Erc20ToERC1155}/>\n            <Route path=\"/erc1155toErc20\" component={Erc1155ToERC20}/>\n          </div>\n        </header>\n      </div>\n    </HashRouter>\n  );\n}\n\nfunction Address({...props}) {\n  return (\n    <span className=\"Address\">\n      <input type=\"text\"\n             style={{maxWidth: '23.5em', width: '100%'}}\n             maxLength={42}\n             size={50}\n             value={props.value ? props.value : \"\"}\n             onChange={props.onChange}\n             className={isAddressValid(props.value) ? '' : 'error'}/>\n    </span>\n  )\n}\n\n// FIXME: Right support for 256 and 160 bit values.\nfunction Uint256({...props}) {\n  return (\n    <span className=\"Uint256\">\n      <input type=\"text\"\n             style={{maxWidth: '27em', width: '100%'}}\n             maxLength={78}\n             value={props.value}\n             onChange={props.onChange}\n             className={isUint256Valid(props.value) ? '' : 'error'}/>\n    </span>\n  )\n}\n\nfunction WrappedERC20({...props}) {\n  return (\n    <span className=\"WrappedERC20\">\n      <input type=\"text\"\n             style={{maxWidth: '27em', width: '100%'}} /* Hack for 160 bit value */\n             maxLength={49}\n             size={56}\n             value={props.value}\n             onChange={props.onChange}\n             className={isWrappedTokenValid(props.value) ? '' : 'error'}/>\n    </span>\n  )\n}\n\nfunction Amount({...props}  ) {\n  return (\n    <span className=\"Amount\">\n      <input type=\"text\"\n             style={{maxWidth: '8em', width: '100%'}} /* Hack for 160 bit value */\n             value={props.value ? props.value : \"\"}\n             onChange={props.onChange}\n             className={isRealNumber(props.value) ? '' : 'error'}/>\n    </span>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ndocument.title = \"Convert ERC-1155 ↔ ERC-20\";\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}